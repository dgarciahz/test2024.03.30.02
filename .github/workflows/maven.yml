# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Maven Compile
      run: mvn clean compile
       
    - name: Maven Test
      # metemos el resultado de los test en test-results.txt
      run: |
        mvn test | tee mvn-test-results.txt
        # aqui lo convertimos en un output
        echo "DATA=$(cat mvn-test-results.txt)" >> $GITHUB_ENV

      #accedemos el output ... esto es un paso artificial 
    - name: Using test results
      run: echo "Data from previous step $DATA"
#      id: test_results
#      if: always()
#      run: echo "{test-results}={test-results.txt}" >> $GITHUB_OUTPUT
#      run: echo "::set-output name=test-results::test-results.txt"
       
    - name: Maven Install
      run: mvn package install
      
      #aqui generamos un artifact
    - name: Uploading artifacts
      uses: actions/upload-artifact@v4
      with:
        # nombre del artefact que será uploaded
        name: distrib_artifact
        # donde encontrar el fichero o multiples ficheros que iran al dist-files
        path: target/test1-0.0.1-SNAPSHOT.jar
        
  use_data_in_other_job:
    runs-on: ubuntu-latest
    steps:
    - name: Using test results second job
      run: echo "Data from previous job + step $DATA"
